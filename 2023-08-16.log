2023-08-16 01:00:00 info: Running job `sendMailReminderCheckin` at 2023-08-16T01:00:00.190Z
2023-08-16 01:00:00 info: Running job `removeBillingInformationCheckin` at 2023-08-16T01:00:00.199Z
2023-08-16 01:00:00 info: Running job `removeBillingInformationCheckin` at 2023-08-16T01:00:00.203Z
2023-08-16 01:00:00 info: Running job `sendMailReportPeriodDaily` at 2023-08-16T01:00:00.205Z
2023-08-16 01:21:24 error: Branch.getBranch err Error: {"message":"Error event error: Error: Unable to generate bundle offer with error codes: (50005, 50090) ","code":"5032"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: Unable to generate bundle offer with error codes: (50005, 50090) \",\"code\":\"5032\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        \n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            \n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Ashley","lname":"Lindner","address":"808 Northwest Maynard Street","city":"Blue Springs","state":"MO","zip":"64015","dateOfBirth":"1984-03-28"}}} {
  "fname": "Ashley",
  "lname": "Lindner",
  "birthday": "1984-03-28",
  "address": "808 Northwest Maynard Street",
  "city": "Blue Springs",
  "state": "MO",
  "postalCode": "64015"
}
2023-08-16 01:22:39 error: Branch.getBranch err Error: GraphQL Error (Code: 503): {"response":{"message":"Service Unavailable","status":503,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        $priorAddress: String!\n              $priorCity: String!\n              $priorState: String!\n              $priorZip: String!\n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            priorAddress: {\n                    address: $priorAddress\n                    city: $priorCity\n                    state: $priorState\n                    zip: $priorZip\n                  }\n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Ashley","lname":"Lindner","address":"22721 East 27th Street Court South","city":"Blue Springs","state":"MO","zip":"64015","dateOfBirth":"1984-03-28","priorAddress":"808 Northwest Maynard Street","priorCity":"Blue Springs","priorState":"MO","priorZip":"64015"}}} {
  "fname": "Ashley",
  "lname": "Lindner",
  "birthday": "1984-03-28",
  "address": "22721 East 27th Street Court South",
  "city": "Blue Springs",
  "state": "MO",
  "postalCode": "64015",
  "mailingAddress": {
    "address": "808 Northwest Maynard Street",
    "state": "MO",
    "city": "Blue Springs",
    "postalCode": "64015"
  }
}
2023-08-16 01:33:12 error: Branch.getBranch err Error: {"message":"Error event error: Error: We need to know prior auto coverage. ","code":"5003"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: We need to know prior auto coverage. \",\"code\":\"5003\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        \n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            \n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Silvia","lname":"Martinez","address":"4804 Cara Court","city":"Chester Springs","state":"PA","zip":"19425","dateOfBirth":"1977-04-30"}}} {
  "fname": "Silvia",
  "lname": "Martinez",
  "birthday": "1977-04-30",
  "address": "4804 Cara Court",
  "city": "Chester Springs",
  "state": "PA",
  "postalCode": "19425"
}
2023-08-16 01:36:10 error: Branch.getBranch err Error: {"message":"Error event error: Error: We need to know prior auto coverage. ","code":"5003"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: We need to know prior auto coverage. \",\"code\":\"5003\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        \n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            \n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Silvia","lname":"Martinez","address":"4804 Cara Court","city":"Chester Springs","state":"PA","zip":"19425","dateOfBirth":"1977-04-30"}}} {
  "fname": "Silvia",
  "lname": "Martinez",
  "birthday": "1977-04-30",
  "address": "4804 Cara Court",
  "city": "Chester Springs",
  "state": "PA",
  "postalCode": "19425"
}
2023-08-16 01:36:36 error: Branch.getBranch err Error: {"message":"Error event error: Error: We need to know prior auto coverage. ","code":"5003"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: We need to know prior auto coverage. \",\"code\":\"5003\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        $priorAddress: String!\n              $priorCity: String!\n              $priorState: String!\n              $priorZip: String!\n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            priorAddress: {\n                    address: $priorAddress\n                    city: $priorCity\n                    state: $priorState\n                    zip: $priorZip\n                  }\n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Silvia","lname":"Martinez","address":"4804 Cara Court","city":"Chester Springs","state":"PA","zip":"19425","dateOfBirth":"1977-04-30","priorAddress":"4804 Cara Court","priorCity":"Chester Springs","priorState":"PA","priorZip":"19425"}}} {
  "fname": "Silvia",
  "lname": "Martinez",
  "birthday": "1977-04-30",
  "address": "4804 Cara Court",
  "city": "Chester Springs",
  "state": "PA",
  "postalCode": "19425",
  "mailingAddress": {
    "address": "4804 Cara Court",
    "state": "PA",
    "city": "Chester Springs",
    "postalCode": "19425"
  }
}
2023-08-16 01:44:24 error: Branch.getBranch err Error: {"message":"Error event error: Error: We need to know prior auto coverage. ","code":"5003"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: We need to know prior auto coverage. \",\"code\":\"5003\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        \n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            \n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Silvia","lname":"Martinez","address":"4804 Cara Court","city":"Chester Springs","state":"PA","zip":"19425","dateOfBirth":"1977-04-30"}}} {
  "fname": "Silvia",
  "lname": "Martinez",
  "birthday": "1977-04-30",
  "address": "4804 Cara Court",
  "city": "Chester Springs",
  "state": "PA",
  "postalCode": "19425"
}
2023-08-16 01:44:45 error: Branch.getBranch err Error: {"message":"Error event error: Error: We need to know prior auto coverage. ","code":"5003"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: We need to know prior auto coverage. \",\"code\":\"5003\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        $priorAddress: String!\n              $priorCity: String!\n              $priorState: String!\n              $priorZip: String!\n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            priorAddress: {\n                    address: $priorAddress\n                    city: $priorCity\n                    state: $priorState\n                    zip: $priorZip\n                  }\n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Silvia","lname":"Martinez","address":"4804 Cara Court","city":"Chester Springs","state":"PA","zip":"19425","dateOfBirth":"1977-04-30","priorAddress":"4804 Cara Court","priorCity":"Chester Springs","priorState":"PA","priorZip":"19425"}}} {
  "fname": "Silvia",
  "lname": "Martinez",
  "birthday": "1977-04-30",
  "address": "4804 Cara Court",
  "city": "Chester Springs",
  "state": "PA",
  "postalCode": "19425",
  "mailingAddress": {
    "address": "4804 Cara Court",
    "state": "PA",
    "city": "Chester Springs",
    "postalCode": "19425"
  }
}
2023-08-16 03:01:33 error: [POST] /api/auth/login >> StatusCode:: 400, Message:: Password incorrect! {
  "email": "peter@apply.insure",
  "password": "Moses23#",
  "remember": true
}
2023-08-16 03:11:09 error: [GET] /api/user/detail/by-link/login >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 03:11:10 error: [GET] /api/user/detail/by-link/login >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:32:27 error: [GET] /api/user/detail/by-link/robots.txt >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:55 error: [GET] /api/user/detail/by-link/z >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:55 error: [GET] /api/user/detail/by-link/z >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:56 error: [GET] /api/user/detail/by-link/zo >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:56 error: [GET] /api/user/detail/by-link/zo >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:56 error: [GET] /api/user/detail/by-link/zoz >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:56 error: [GET] /api/user/detail/by-link/zoz >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:56 error: [GET] /api/user/detail/by-link/zozl >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:56 error: [GET] /api/user/detail/by-link/zozl >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:56 error: [GET] /api/user/detail/by-link/z >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:56 error: [GET] /api/user/detail/by-link/zozlo >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:56 error: [GET] /api/user/detail/by-link/zozlo >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:56 error: [GET] /api/user/detail/by-link/z >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:56 error: [GET] /api/user/detail/by-link/zo >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:56 error: [GET] /api/user/detail/by-link/zo >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:56 error: [GET] /api/user/detail/by-link/zoz >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:57 error: [GET] /api/user/detail/by-link/zoz >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:57 error: [GET] /api/user/detail/by-link/zozlo >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:57 error: [GET] /api/user/detail/by-link/zozl >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:57 error: [GET] /api/user/detail/by-link/zozlo >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:57 error: [GET] /api/user/detail/by-link/zozlo· >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:57 error: [GET] /api/user/detail/by-link/zozlo· >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:57 error: [GET] /api/user/detail/by-link/zozl >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:57 error: [GET] /api/user/detail/by-link/zozl· >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:57 error: [GET] /api/user/detail/by-link/zozl· >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:57 error: [GET] /api/user/detail/by-link/zoz >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:58 error: [GET] /api/user/detail/by-link/zozl >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:58 error: [GET] /api/user/detail/by-link/zozlÂ· >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:58 error: [GET] /api/user/detail/by-link/zozloÂ· >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:58 error: [GET] /api/user/detail/by-link/zozlÂ· >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:58 error: [GET] /api/user/detail/by-link/zozloÂ· >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:58 error: [GET] /api/user/detail/by-link/zozo >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:58 error: [GET] /api/user/detail/by-link/zozo >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:58 error: [GET] /api/user/detail/by-link/zozol >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:58 error: [GET] /api/user/detail/by-link/zozol >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:59 error: [GET] /api/user/detail/by-link/zozol >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:59 error: [GET] /api/user/detail/by-link/zozo >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:59 error: [GET] /api/user/detail/by-link/zozo >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:34:59 error: [GET] /api/user/detail/by-link/zozol >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:06 error: [GET] /api/user/detail/by-link/z >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:20 error: [GET] /api/user/detail/by-link/p >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:20 error: [GET] /api/user/detail/by-link/p >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/pe >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/pe >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/pet >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/pet >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/pet· >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/pet· >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/pê >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/pê >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/pêt >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/pêt >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/p >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/pe >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/p >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/pe >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/pêt· >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/pêt· >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/pet >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:21 error: [GET] /api/user/detail/by-link/pet >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:22 error: [GET] /api/user/detail/by-link/pê >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:22 error: [GET] /api/user/detail/by-link/petÂ· >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:22 error: [GET] /api/user/detail/by-link/petÂ· >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:22 error: [GET] /api/user/detail/by-link/pÃª >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:22 error: [GET] /api/user/detail/by-link/pÃªt >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:22 error: [GET] /api/user/detail/by-link/pet >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:22 error: [GET] /api/user/detail/by-link/pÃªt >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:22 error: [GET] /api/user/detail/by-link/pÃªtÂ· >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:36:24 error: [GET] /api/user/detail/by-link/pÃªtÂ· >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:38:38 error: [GET] /api/user/detail/by-link/p >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 04:39:55 error: [GET] /api/user/detail/by-link/z >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 05:33:24 error: [GET] /api/user/detail/by-link/.env >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 06:05:21 error: [GET] /api/user/detail/by-link/apple-touch-icon-precomposed.png >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 06:05:21 error: [GET] /api/user/detail/by-link/apple-touch-icon.png >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 06:05:27 error: [GET] /api/user/detail/by-link/apple-touch-icon-120x120-precomposed.png >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 06:05:27 error: [GET] /api/user/detail/by-link/apple-touch-icon-120x120.png >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 06:05:27 error: [GET] /api/user/detail/by-link/apple-touch-icon-precomposed.png >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 06:05:27 error: [GET] /api/user/detail/by-link/apple-touch-icon.png >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 06:07:56 error: Branch.getBranch err Error: {"message":"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). ","code":"5008"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). \",\"code\":\"5008\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        \n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            \n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Annalyse","lname":"Russo","address":"55 King Street","city":"Haledon","state":"NJ","zip":"07508","dateOfBirth":"1992-08-06"}}} {
  "fname": "Annalyse",
  "lname": "Russo",
  "birthday": "1992-08-06",
  "address": "55 King Street",
  "city": "Haledon",
  "state": "NJ",
  "postalCode": "07508"
}
2023-08-16 06:09:32 error: Branch.getBranch err Error: {"message":"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). ","code":"5008"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). \",\"code\":\"5008\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        $priorAddress: String!\n              $priorCity: String!\n              $priorState: String!\n              $priorZip: String!\n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            priorAddress: {\n                    address: $priorAddress\n                    city: $priorCity\n                    state: $priorState\n                    zip: $priorZip\n                  }\n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Annalyse","lname":"Russo","address":"34 Cherokee Avenue","city":"Parsippany-Troy Hills","state":"NJ","zip":"07034","dateOfBirth":"1992-08-06","priorAddress":"55 King Street","priorCity":"Haledon","priorState":"NJ","priorZip":"07508"}}} {
  "fname": "Annalyse",
  "lname": "Russo",
  "birthday": "1992-08-06",
  "address": "34 Cherokee Avenue",
  "city": "Parsippany-Troy Hills",
  "state": "NJ",
  "postalCode": "07034",
  "mailingAddress": {
    "address": "55 King Street",
    "state": "NJ",
    "city": "Haledon",
    "postalCode": "07508"
  }
}
2023-08-16 06:51:11 error: Branch.getBranch err Error: {"message":"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). ","code":"5008"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). \",\"code\":\"5008\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        \n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            \n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Patricia ","lname":"Hercules","address":"71 Cedar Avenue","city":"Newark","state":"NJ","zip":"07106","dateOfBirth":"1966-06-03"}}} {
  "fname": "Patricia ",
  "lname": "Hercules",
  "birthday": "1966-06-03",
  "address": "71 Cedar Avenue",
  "city": "Newark",
  "state": "NJ",
  "postalCode": "07106"
}
2023-08-16 06:52:34 error: Branch.getBranch err Error: {"message":"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). ","code":"5008"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). \",\"code\":\"5008\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        $priorAddress: String!\n              $priorCity: String!\n              $priorState: String!\n              $priorZip: String!\n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            priorAddress: {\n                    address: $priorAddress\n                    city: $priorCity\n                    state: $priorState\n                    zip: $priorZip\n                  }\n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Patricia ","lname":"Hercules","address":"164 Fairmount Avenue","city":"Newark","state":"NJ","zip":"07103","dateOfBirth":"1966-06-03","priorAddress":"71 Cedar Avenue","priorCity":"Newark","priorState":"NJ","priorZip":"07106"}}} {
  "fname": "Patricia ",
  "lname": "Hercules",
  "birthday": "1966-06-03",
  "address": "164 Fairmount Avenue",
  "city": "Newark",
  "state": "NJ",
  "postalCode": "07103",
  "mailingAddress": {
    "address": "71 Cedar Avenue",
    "state": "NJ",
    "city": "Newark",
    "postalCode": "07106"
  }
}
2023-08-16 07:00:00 info: Running job `sendMailReminderCheckin` at 2023-08-16T07:00:00.968Z
2023-08-16 07:05:27 error: [GET] /api/user/detail/by-link/.env >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 08:37:56 error: [GET] /api/user/detail/by-link/robots.txt >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 08:43:31 error: [GET] /api/user/detail/by-link/.env >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 09:25:25 error: [GET] /api/user/detail/by-link/robots.txt >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 09:42:46 error: [GET] /api/user/detail/by-link/robots.txt >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 10:35:57 error: [GET] /api/user/detail/by-link/robots.txt >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 11:39:05 error: Branch.getBranch err Error: {"message":"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). ","code":"5008"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). \",\"code\":\"5008\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        \n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            \n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Scott","lname":"Pennington","address":"715 East Main Street","city":"Maple Shade","state":"NJ","zip":"08052","dateOfBirth":"1992-09-06"}}} {
  "fname": "Scott",
  "lname": "Pennington",
  "birthday": "1992-09-06",
  "address": "715 East Main Street",
  "city": "Maple Shade",
  "state": "NJ",
  "postalCode": "08052"
}
2023-08-16 11:39:59 error: Branch.getBranch err Error: {"message":"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). ","code":"5008"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). \",\"code\":\"5008\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        $priorAddress: String!\n              $priorCity: String!\n              $priorState: String!\n              $priorZip: String!\n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            priorAddress: {\n                    address: $priorAddress\n                    city: $priorCity\n                    state: $priorState\n                    zip: $priorZip\n                  }\n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Scott","lname":"Pennington","address":"70 East Cloverdale Avenue","city":"Pine Hill","state":"NJ","zip":"08021","dateOfBirth":"1992-09-06","priorAddress":"715 East Main Street","priorCity":"Maple Shade","priorState":"NJ","priorZip":"08052"}}} {
  "fname": "Scott",
  "lname": "Pennington",
  "birthday": "1992-09-06",
  "address": "70 East Cloverdale Avenue",
  "city": "Pine Hill",
  "state": "NJ",
  "postalCode": "08021",
  "mailingAddress": {
    "address": "715 East Main Street",
    "state": "NJ",
    "city": "Maple Shade",
    "postalCode": "08052"
  }
}
2023-08-16 11:53:25 error: [GET] /api/user/detail/by-link/robots.txt >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 12:33:42 error: Branch.getBranch err Error: {"message":"Error event error: Error: Unable to generate bundle offer with error codes: (20004, 50005) ","code":"5032"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: Unable to generate bundle offer with error codes: (20004, 50005) \",\"code\":\"5032\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        \n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            \n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Louis","lname":"DiFabio","address":"1524 Society Hill Drive","city":"Bensalem","state":"PA","zip":"19020","dateOfBirth":"1955-09-29"}}} {
  "fname": "Louis",
  "lname": "DiFabio",
  "birthday": "1955-09-29",
  "address": "1524 Society Hill Drive",
  "city": "Bensalem",
  "state": "PA",
  "postalCode": "19020"
}
2023-08-16 12:36:08 error: Branch.getBranch err Error: Variable "$zip" of required type "String!" was not provided.: {"response":{"errors":[{"message":"Variable \"$zip\" of required type \"String!\" was not provided.","locations":[{"line":9,"column":9}],"extensions":{"code":"BAD_USER_INPUT"}}],"status":400,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        $priorAddress: String!\n              $priorCity: String!\n              $priorState: String!\n              $priorZip: String!\n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            priorAddress: {\n                    address: $priorAddress\n                    city: $priorCity\n                    state: $priorState\n                    zip: $priorZip\n                  }\n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Louis","lname":"DiFabio","address":"undefined undefined","city":"Boothwyn","state":"PA","dateOfBirth":"1955-09-29","priorAddress":"1524 Society Hill Drive","priorCity":"Bensalem","priorState":"PA","priorZip":"19020"}}} {
  "fname": "Louis",
  "lname": "DiFabio",
  "birthday": "1955-09-29",
  "address": "undefined undefined",
  "city": "Boothwyn",
  "state": "PA",
  "mailingAddress": {
    "address": "1524 Society Hill Drive",
    "state": "PA",
    "city": "Bensalem",
    "postalCode": "19020"
  }
}
2023-08-16 12:37:03 error: Branch.getBranch err Error: {"message":"Error event error: Error: Unable to generate bundle offer with error codes: (20004, 50005) ","code":"5032"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: Unable to generate bundle offer with error codes: (20004, 50005) \",\"code\":\"5032\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        $priorAddress: String!\n              $priorCity: String!\n              $priorState: String!\n              $priorZip: String!\n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            priorAddress: {\n                    address: $priorAddress\n                    city: $priorCity\n                    state: $priorState\n                    zip: $priorZip\n                  }\n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Louis","lname":"DiFabio","address":"2 Huntington Court","city":"Ogden","state":"PA","zip":"19061","dateOfBirth":"1955-09-29","priorAddress":"1524 Society Hill Drive","priorCity":"Bensalem","priorState":"PA","priorZip":"19020"}}} {
  "fname": "Louis",
  "lname": "DiFabio",
  "birthday": "1955-09-29",
  "address": "2 Huntington Court",
  "city": "Ogden",
  "state": "PA",
  "postalCode": "19061",
  "mailingAddress": {
    "address": "1524 Society Hill Drive",
    "state": "PA",
    "city": "Bensalem",
    "postalCode": "19020"
  }
}
2023-08-16 12:51:53 error: [GET] /api/user/detail/by-link/robots.txt >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 12:51:53 error: [GET] /api/user/detail/by-link/about >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 12:53:07 error: [GET] /api/user/detail/by-link/about >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 13:00:00 info: Running job `sendMailReminderCheckin` at 2023-08-16T13:00:00.855Z
2023-08-16 13:00:00 info: Running job `removeBillingInformationCheckin` at 2023-08-16T13:00:00.857Z
2023-08-16 13:00:00 info: Running job `removeBillingInformationCheckin` at 2023-08-16T13:00:00.859Z
2023-08-16 13:08:46 error: [GET] /api/user/detail/by-link/signup >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 13:09:01 error: [GET] /api/user/detail/by-link/.env >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 13:10:36 error: Branch.getBranch err Error: {"message":"Error event error: Error: Unable to generate bundle offer with error codes: (50005, 50090) ","code":"5032"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: Unable to generate bundle offer with error codes: (50005, 50090) \",\"code\":\"5032\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        \n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            \n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Donna","lname":"Ulanowski","address":"45 Upper Hilltop Road","city":"Morrisville","state":"PA","zip":"19067","dateOfBirth":"1987-11-10"}}} {
  "fname": "Donna",
  "lname": "Ulanowski",
  "birthday": "1987-11-10",
  "address": "45 Upper Hilltop Road",
  "city": "Morrisville",
  "state": "PA",
  "postalCode": "19067"
}
2023-08-16 13:10:57 error: Branch.getBranch err Error: {"message":"Error event error: Error: Unable to generate bundle offer with error codes: (50005, 50090) ","code":"5032"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: Unable to generate bundle offer with error codes: (50005, 50090) \",\"code\":\"5032\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        $priorAddress: String!\n              $priorCity: String!\n              $priorState: String!\n              $priorZip: String!\n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            priorAddress: {\n                    address: $priorAddress\n                    city: $priorCity\n                    state: $priorState\n                    zip: $priorZip\n                  }\n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Donna","lname":"Ulanowski","address":"130 Briarwood Drive","city":"Holland","state":"PA","zip":"18966","dateOfBirth":"1987-11-10","priorAddress":"45 Upper Hilltop Road","priorCity":"Morrisville","priorState":"PA","priorZip":"19067"}}} {
  "fname": "Donna",
  "lname": "Ulanowski",
  "birthday": "1987-11-10",
  "address": "130 Briarwood Drive",
  "city": "Holland",
  "state": "PA",
  "postalCode": "18966",
  "mailingAddress": {
    "address": "45 Upper Hilltop Road",
    "state": "PA",
    "city": "Morrisville",
    "postalCode": "19067"
  }
}
2023-08-16 13:12:27 error: [POST] /api/carrier/get-openly-home >> StatusCode:: 500, Message:: each key must be a number or string; got undefined {
  "email": "donnau10@aol.com",
  "firstName": "Donna",
  "lastName": "Ulanowski",
  "dob": "1987-11-09",
  "birthday": "11-09-1987",
  "address": {
    "fullAddress": "130 Briarwood Drive, Holland, PA, USA",
    "address": "130 Briarwood Drive",
    "street": "130 Briarwood Drive",
    "state": "PA",
    "county": "Bucks County",
    "city": "Holland",
    "postalCode": "18966"
  },
  "squareFootage": "4230",
  "numberOfStories": "3",
  "numberOfFullBathrooms": 0,
  "yearBuilt": "1987",
  "roofAge": 2004,
  "roofType": "ThreeTab",
  "roofShape": "Gable",
  "buildingMaterial": "WoodFrameMasonry",
  "hasBasement": false,
  "swimmingPool": false,
  "userId": "61385e8651f3ad28b1a07814",
  "roofYear": 2004
}
2023-08-16 13:22:53 error: [GET] /api/user/detail/by-link/robots.txt >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 13:34:03 error: Branch.getBranch err Error: {"message":"Error event error: Error: Unable to generate bundle offer with error codes: (50005, 20004) ","code":"5032"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: Unable to generate bundle offer with error codes: (50005, 20004) \",\"code\":\"5032\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        \n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            \n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Johathan","lname":"Williams","address":"2703 Bluewater Circle","city":"Naperville","state":"IL","zip":"60564","dateOfBirth":"1987-03-31"}}} {
  "fname": "Johathan",
  "lname": "Williams",
  "birthday": "1987-03-31",
  "address": "2703 Bluewater Circle",
  "city": "Naperville",
  "state": "IL",
  "postalCode": "60564"
}
2023-08-16 13:34:19 error: Branch.getBranch err Error: {"message":"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). ","code":"5008"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). \",\"code\":\"5008\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        $priorAddress: String!\n              $priorCity: String!\n              $priorState: String!\n              $priorZip: String!\n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            priorAddress: {\n                    address: $priorAddress\n                    city: $priorCity\n                    state: $priorState\n                    zip: $priorZip\n                  }\n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Johathan","lname":"Williams","address":"12 Creek Lane","city":"Newark","state":"DE","zip":"19702","dateOfBirth":"1987-03-31","priorAddress":"2703 Bluewater Circle","priorCity":"Naperville","priorState":"IL","priorZip":"60564"}}} {
  "fname": "Johathan",
  "lname": "Williams",
  "birthday": "1987-03-31",
  "address": "12 Creek Lane",
  "city": "Newark",
  "state": "DE",
  "postalCode": "19702",
  "mailingAddress": {
    "address": "2703 Bluewater Circle",
    "state": "IL",
    "city": "Naperville",
    "postalCode": "60564"
  }
}
2023-08-16 13:36:55 error: [GET] /api/user/detail/by-link/robots.txt >> StatusCode:: 400, Message:: User not exist {}
2023-08-16 13:58:16 error: Branch.getBranch err Error: {"message":"Error event error: Error: We need to know prior auto coverage. ","code":"5003"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: We need to know prior auto coverage. \",\"code\":\"5003\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        \n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            \n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Eric","lname":"Stout","address":"607 Marydell Drive","city":"West Chester","state":"PA","zip":"19380","dateOfBirth":"1975-12-08"}}} {
  "fname": "Eric",
  "lname": "Stout",
  "birthday": "1975-12-08",
  "address": "607 Marydell Drive",
  "city": "West Chester",
  "state": "PA",
  "postalCode": "19380"
}
2023-08-16 13:59:23 error: Branch.getBranch err Error: {"message":"Error event error: Error: We need to know prior auto coverage. ","code":"5003"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: We need to know prior auto coverage. \",\"code\":\"5003\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        $priorAddress: String!\n              $priorCity: String!\n              $priorState: String!\n              $priorZip: String!\n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            priorAddress: {\n                    address: $priorAddress\n                    city: $priorCity\n                    state: $priorState\n                    zip: $priorZip\n                  }\n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Eric","lname":"Stout","address":"1314 Morton Avenue","city":"Chester","state":"PA","zip":"19013","dateOfBirth":"1975-12-08","priorAddress":"607 Marydell Drive","priorCity":"West Chester","priorState":"PA","priorZip":"19380"}}} {
  "fname": "Eric",
  "lname": "Stout",
  "birthday": "1975-12-08",
  "address": "1314 Morton Avenue",
  "city": "Chester",
  "state": "PA",
  "postalCode": "19013",
  "mailingAddress": {
    "address": "607 Marydell Drive",
    "state": "PA",
    "city": "West Chester",
    "postalCode": "19380"
  }
}
2023-08-16 14:35:21 error: Branch.getBranch err Error: {"message":"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). ","code":"5008"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). \",\"code\":\"5008\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        \n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            \n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Jude","lname":"Pineda","address":"3310 North Davidson Street","city":"Charlotte","state":"NC","zip":"28205","dateOfBirth":"1981-09-16"}}} {
  "fname": "Jude",
  "lname": "Pineda",
  "birthday": "1981-09-16",
  "address": "3310 North Davidson Street",
  "city": "Charlotte",
  "state": "NC",
  "postalCode": "28205"
}
2023-08-16 14:36:57 error: Branch.getBranch err Error: {"message":"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). ","code":"5008"}: {"response":{"errors":[{"message":"{\"message\":\"Error event error: Error: Not in a live state (AL/AR/AZ/CO/DC/GA/IA/IL/IN/KS/KY/LA/MD/MI/MO/MS/MT/ND/NE/NM/OH/OK/OR/PA/SC/TX/UT/VA/WI/WV/WY). \",\"code\":\"5008\"}","path":["requestQuote"]}],"data":{"requestQuote":null},"status":200,"headers":{}},"request":{"query":"\n      query RequestQuote(\n        $fname: String!\n        $lname: String!\n        $dateOfBirth: String!\n        $address: String!\n        $city: String!\n        $state: String!\n        $zip: String!\n        $priorAddress: String!\n              $priorCity: String!\n              $priorState: String!\n              $priorZip: String!\n      ) {\n        requestQuote(\n          userInput: {\n            fname: $fname\n            lname: $lname\n            dateOfBirth: $dateOfBirth\n            address: $address\n            city: $city\n            state: $state\n            zip: $zip\n            priorAddress: {\n                    address: $priorAddress\n                    city: $priorCity\n                    state: $priorState\n                    zip: $priorZip\n                  }\n            \n          }\n        ) {\n          id\n          options {\n            id\n            type\n            description\n            homeTotal\n            autoTotal\n          }\n\n          quote {\n            drivers {\n              id\n              isPrimary\n              isCoApplicant\n              firstName\n              middleName\n              lastName\n              suffix\n              gender\n              maritalStatus\n              highestEducation\n              age\n              driversLicenseState\n              ageFirstLicensed\n              fullTimeStudent\n              goodStudent\n              takenCourse\n              schoolName\n              schoolZip\n              addDate\n              excludeDriver\n              communityDriveParticipation\n              postBindMVR\n              hasUDR\n              nonUDRIncidentCount\n            }\n            cars {\n              VIN\n              year\n              make\n              model\n              primaryUse\n              purchaseDate\n              garageLocation {\n                address\n                address2\n                city\n                state\n                zip\n              }\n              deductibleCollision\n              deductibleComprehensive\n              limitUMPD\n              limitRental\n              limitACPE\n              roadsideAssistance\n              rideSharing\n              image\n              aebStatus\n              aebConfirmed\n              antiTheftStatus\n              antiTheftConfirmed\n              blindSpotStatus\n              blindSpotConfirmed\n              coverageLoan\n            }\n          }\n        }\n      }\n    ","variables":{"fname":"Jude","lname":"Pineda","address":"2823 Meadowcliff Drive","city":"Charlotte","state":"NC","zip":"28215","dateOfBirth":"1981-09-16","priorAddress":"3310 North Davidson Street","priorCity":"Charlotte","priorState":"NC","priorZip":"28205"}}} {
  "fname": "Jude",
  "lname": "Pineda",
  "birthday": "1981-09-16",
  "address": "2823 Meadowcliff Drive",
  "city": "Charlotte",
  "state": "NC",
  "postalCode": "28215",
  "mailingAddress": {
    "address": "3310 North Davidson Street",
    "state": "NC",
    "city": "Charlotte",
    "postalCode": "28205"
  }
}
